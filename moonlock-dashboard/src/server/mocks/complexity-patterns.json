{
  "projectTypePatterns": {
    "react-webapp": {
      "name": "React Web Application",
      "baseComplexity": 6.2,
      "factors": {
        "typescript": { "impact": 0.8, "description": "TypeScript adds type safety but complexity" },
        "stateManagement": { "impact": 1.2, "description": "Redux/Zustand increases architectural complexity" },
        "routing": { "impact": 0.6, "description": "React Router adds navigation complexity" },
        "testing": { "impact": -0.8, "description": "Good testing reduces overall complexity" },
        "bundler": { "impact": 0.4, "description": "Webpack/Vite configuration complexity" }
      },
      "commonIssues": [
        "State management complexity",
        "Component reusability challenges",
        "Performance optimization needs",
        "Testing setup difficulties"
      ],
      "estimatedDuration": {
        "analysis": 90,
        "implementation": 300,
        "testing": 120,
        "documentation": 60
      }
    },
    "nodejs-api": {
      "name": "Node.js REST API",
      "baseComplexity": 5.8,
      "factors": {
        "database": { "impact": 1.0, "description": "Database integration adds complexity" },
        "authentication": { "impact": 1.5, "description": "Auth systems significantly increase complexity" },
        "microservices": { "impact": 2.0, "description": "Microservice architecture adds distributed complexity" },
        "caching": { "impact": 0.8, "description": "Caching layers add architectural complexity" },
        "logging": { "impact": 0.3, "description": "Proper logging setup adds minor complexity" }
      },
      "commonIssues": [
        "Database design challenges",
        "Authentication and authorization complexity",
        "Error handling and logging",
        "API versioning and backwards compatibility"
      ],
      "estimatedDuration": {
        "analysis": 75,
        "implementation": 240,
        "testing": 90,
        "documentation": 45
      }
    },
    "python-data": {
      "name": "Python Data Analysis",
      "baseComplexity": 7.1,
      "factors": {
        "dataSize": { "impact": 1.5, "description": "Large datasets increase processing complexity" },
        "mlModels": { "impact": 2.2, "description": "Machine learning models add significant complexity" },
        "visualization": { "impact": 0.9, "description": "Data visualization adds presentation complexity" },
        "realTime": { "impact": 1.8, "description": "Real-time processing adds architectural complexity" },
        "dataQuality": { "impact": 1.3, "description": "Poor data quality increases cleaning complexity" }
      },
      "commonIssues": [
        "Data quality and cleaning challenges",
        "Performance optimization for large datasets",
        "Model accuracy and validation",
        "Visualization and reporting complexity"
      ],
      "estimatedDuration": {
        "analysis": 120,
        "implementation": 360,
        "testing": 90,
        "documentation": 75
      }
    },
    "mobile-app": {
      "name": "Mobile Application",
      "baseComplexity": 7.8,
      "factors": {
        "crossPlatform": { "impact": 1.5, "description": "Cross-platform development adds complexity" },
        "nativeFeatures": { "impact": 1.8, "description": "Native device features increase complexity" },
        "offline": { "impact": 2.0, "description": "Offline functionality adds significant complexity" },
        "pushNotifications": { "impact": 1.2, "description": "Push notifications add infrastructure complexity" },
        "appStore": { "impact": 0.8, "description": "App store deployment adds process complexity" }
      },
      "commonIssues": [
        "Platform-specific differences",
        "Performance optimization challenges",
        "App store approval processes",
        "Device compatibility issues"
      ],
      "estimatedDuration": {
        "analysis": 150,
        "implementation": 480,
        "testing": 180,
        "documentation": 90
      }
    },
    "devops-infrastructure": {
      "name": "DevOps Infrastructure",
      "baseComplexity": 8.5,
      "factors": {
        "containerization": { "impact": 1.2, "description": "Docker/Kubernetes adds deployment complexity" },
        "cicd": { "impact": 1.5, "description": "CI/CD pipelines add automation complexity" },
        "monitoring": { "impact": 1.0, "description": "Monitoring and alerting add operational complexity" },
        "security": { "impact": 1.8, "description": "Security hardening adds significant complexity" },
        "scaling": { "impact": 2.2, "description": "Auto-scaling adds architectural complexity" }
      },
      "commonIssues": [
        "Infrastructure as Code complexity",
        "Security and compliance requirements",
        "Monitoring and alerting setup",
        "Cost optimization challenges"
      ],
      "estimatedDuration": {
        "analysis": 180,
        "implementation": 420,
        "testing": 120,
        "documentation": 60
      }
    }
  },
  "complexityModifiers": {
    "teamSize": {
      "solo": { "multiplier": 1.0, "description": "Single developer - full control but all responsibility" },
      "small": { "multiplier": 0.8, "description": "2-3 developers - good coordination, shared workload" },
      "medium": { "multiplier": 1.2, "description": "4-8 developers - coordination overhead increases" },
      "large": { "multiplier": 1.8, "description": "9+ developers - significant coordination complexity" }
    },
    "timeline": {
      "rushed": { "multiplier": 1.5, "description": "Tight deadlines increase pressure and error risk" },
      "normal": { "multiplier": 1.0, "description": "Standard timeline allows proper development practices" },
      "relaxed": { "multiplier": 0.9, "description": "Extended timeline allows for thorough approach" }
    },
    "experience": {
      "junior": { "multiplier": 1.4, "description": "Less experience increases learning curve and errors" },
      "mid": { "multiplier": 1.0, "description": "Standard experience level baseline" },
      "senior": { "multiplier": 0.8, "description": "High experience reduces complexity through expertise" },
      "expert": { "multiplier": 0.6, "description": "Expert level significantly reduces perceived complexity" }
    },
    "technology": {
      "new": { "multiplier": 1.6, "description": "New/unfamiliar technology increases learning overhead" },
      "familiar": { "multiplier": 1.0, "description": "Familiar technology baseline" },
      "expert": { "multiplier": 0.7, "description": "Expert knowledge of technology reduces complexity" }
    }
  },
  "riskIndicators": {
    "high": {
      "technicalDebt": { "threshold": 100, "weight": 0.3 },
      "testCoverage": { "threshold": 40, "weight": 0.25, "inverse": true },
      "cyclomaticComplexity": { "threshold": 20, "weight": 0.2 },
      "dependencyCount": { "threshold": 150, "weight": 0.15 },
      "fileCount": { "threshold": 500, "weight": 0.1 }
    },
    "medium": {
      "technicalDebt": { "threshold": 50, "weight": 0.3 },
      "testCoverage": { "threshold": 60, "weight": 0.25, "inverse": true },
      "cyclomaticComplexity": { "threshold": 15, "weight": 0.2 },
      "dependencyCount": { "threshold": 75, "weight": 0.15 },
      "fileCount": { "threshold": 200, "weight": 0.1 }
    },
    "low": {
      "technicalDebt": { "threshold": 20, "weight": 0.3 },
      "testCoverage": { "threshold": 80, "weight": 0.25, "inverse": true },
      "cyclomaticComplexity": { "threshold": 10, "weight": 0.2 },
      "dependencyCount": { "threshold": 30, "weight": 0.15 },
      "fileCount": { "threshold": 50, "weight": 0.1 }
    }
  },
  "languageComplexityWeights": {
    "javascript": 1.0,
    "typescript": 1.2,
    "python": 1.1,
    "java": 1.8,
    "cpp": 2.2,
    "csharp": 1.6,
    "go": 1.4,
    "rust": 1.7,
    "php": 1.1,
    "ruby": 1.2,
    "swift": 1.5,
    "kotlin": 1.5,
    "scala": 2.1,
    "haskell": 2.5,
    "clojure": 2.3
  },
  "frameworkComplexityWeights": {
    "react": 1.2,
    "vue": 1.0,
    "angular": 1.8,
    "svelte": 0.9,
    "express": 1.0,
    "fastapi": 1.1,
    "django": 1.5,
    "flask": 0.8,
    "spring": 2.0,
    "rails": 1.3,
    "laravel": 1.2,
    "nextjs": 1.4,
    "nuxtjs": 1.3,
    "gatsby": 1.1
  },
  "estimationFormulas": {
    "baseTimeEstimation": {
      "formula": "complexity * 60 + fileCount * 0.5 + dependencyCount * 2",
      "description": "Base time estimation in minutes based on complexity factors"
    },
    "tokenEstimation": {
      "formula": "timeMinutes * 45 + complexity * 500",
      "description": "Token estimation based on time and complexity"
    },
    "bufferCalculation": {
      "formula": "baseEstimate * (0.15 + riskLevel * 0.1)",
      "description": "Buffer time calculation based on risk level"
    }
  },
  "successPatterns": {
    "highSuccess": {
      "testCoverage": "> 80%",
      "documentation": "> 70%",
      "technicalDebt": "< 30 hours",
      "complexity": "< 7",
      "teamExperience": "senior+",
      "successRate": 0.85
    },
    "mediumSuccess": {
      "testCoverage": "50-80%",
      "documentation": "40-70%",
      "technicalDebt": "30-80 hours",
      "complexity": "5-8",
      "teamExperience": "mid+",
      "successRate": 0.65
    },
    "lowSuccess": {
      "testCoverage": "< 50%",
      "documentation": "< 40%",
      "technicalDebt": "> 80 hours",
      "complexity": "> 8",
      "teamExperience": "junior",
      "successRate": 0.35
    }
  }
}